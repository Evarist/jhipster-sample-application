{"ast":null,"code":"/*\n * Application Insights JavaScript SDK - Channel, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\nimport { createUniqueNamespace, eventOff, eventOn, getDocument, getNavigator, getWindow, isNullOrUndefined, isUndefined, mergeEvtNamespace } from \"@microsoft/applicationinsights-core-js\";\nimport { _DYN_IS_ONLINE, _DYN_ON_LINE } from \"./__DynamicConstants\";\nfunction _disableEvents(target, evtNamespace) {\n  eventOff(target, null, null, evtNamespace);\n}\n/**\r\n * Create a new OfflineListener instance to monitor browser online / offline events\r\n * @param parentEvtNamespace - The parent event namespace to append to any specific events for this instance\r\n */\nexport function createOfflineListener(parentEvtNamespace) {\n  var _a;\n  var _document = getDocument();\n  var _navigator = getNavigator(); // Gets the window.navigator or workerNavigator depending on the global\n  var _isListening = false;\n  var _onlineStatus = true;\n  var _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"OfflineListener\"), parentEvtNamespace);\n  try {\n    if (_enableEvents(getWindow())) {\n      _isListening = true;\n    }\n    if (_document) {\n      // Also attach to the document.body or document\n      var target = _document.body || _document;\n      if (target.ononline) {\n        if (_enableEvents(target)) {\n          _isListening = true;\n        }\n      }\n    }\n    if (_isListening) {\n      // We are listening to events so lets set the current status rather than assuming we are online #1538\n      if (_navigator && !isNullOrUndefined(_navigator[_DYN_ON_LINE /* @min:%2eonLine */])) {\n        // navigator.onLine is undefined in react-native\n        _onlineStatus = _navigator[_DYN_ON_LINE /* @min:%2eonLine */];\n      }\n    }\n  } catch (e) {\n    // this makes react-native less angry\n    _isListening = false;\n  }\n  function _enableEvents(target) {\n    var enabled = false;\n    if (target) {\n      enabled = eventOn(target, \"online\", _setOnline, _evtNamespace);\n      if (enabled) {\n        eventOn(target, \"offline\", _setOffline, _evtNamespace);\n      }\n    }\n    return enabled;\n  }\n  function _setOnline() {\n    _onlineStatus = true;\n  }\n  function _setOffline() {\n    _onlineStatus = false;\n  }\n  function _isOnline() {\n    var result = true;\n    if (_isListening) {\n      result = _onlineStatus;\n    } else if (_navigator && !isNullOrUndefined(_navigator[_DYN_ON_LINE /* @min:%2eonLine */])) {\n      // navigator.onLine is undefined in react-native\n      result = _navigator[_DYN_ON_LINE /* @min:%2eonLine */];\n    }\n\n    return result;\n  }\n  function _unload() {\n    var win = getWindow();\n    if (win && _isListening) {\n      _disableEvents(win, _evtNamespace);\n      if (_document) {\n        // Also attach to the document.body or document\n        var target = _document.body || _document;\n        if (!isUndefined(target.ononline)) {\n          _disableEvents(target, _evtNamespace);\n        }\n      }\n      _isListening = false;\n    }\n  }\n  return _a = {}, _a[_DYN_IS_ONLINE /* @min:isOnline */] = _isOnline, _a.isListening = function () {\n    return _isListening;\n  }, _a.unload = _unload, _a;\n}","map":{"version":3,"names":["createUniqueNamespace","eventOff","eventOn","getDocument","getNavigator","getWindow","isNullOrUndefined","isUndefined","mergeEvtNamespace","_DYN_IS_ONLINE","_DYN_ON_LINE","_disableEvents","target","evtNamespace","createOfflineListener","parentEvtNamespace","_a","_document","_navigator","_isListening","_onlineStatus","_evtNamespace","_enableEvents","body","ononline","e","enabled","_setOnline","_setOffline","_isOnline","result","_unload","win","isListening","unload"],"sources":["/Users/evaristlobo/Documents/GitHub/jhipster-sample-application/client/node_modules/@microsoft/applicationinsights-channel-js/dist-esm/Offline.js"],"sourcesContent":["import { createUniqueNamespace, eventOff, eventOn, getDocument, getNavigator, getWindow, isNullOrUndefined, isUndefined, mergeEvtNamespace } from \"@microsoft/applicationinsights-core-js\";\r\nimport { _DYN_IS_ONLINE, _DYN_ON_LINE } from \"./__DynamicConstants\";\r\nfunction _disableEvents(target, evtNamespace) {\r\n    eventOff(target, null, null, evtNamespace);\r\n}\r\n/**\r\n * Create a new OfflineListener instance to monitor browser online / offline events\r\n * @param parentEvtNamespace - The parent event namespace to append to any specific events for this instance\r\n */\r\nexport function createOfflineListener(parentEvtNamespace) {\r\n    var _a;\r\n    var _document = getDocument();\r\n    var _navigator = getNavigator(); // Gets the window.navigator or workerNavigator depending on the global\r\n    var _isListening = false;\r\n    var _onlineStatus = true;\r\n    var _evtNamespace = mergeEvtNamespace(createUniqueNamespace(\"OfflineListener\"), parentEvtNamespace);\r\n    try {\r\n        if (_enableEvents(getWindow())) {\r\n            _isListening = true;\r\n        }\r\n        if (_document) {\r\n            // Also attach to the document.body or document\r\n            var target = _document.body || _document;\r\n            if (target.ononline) {\r\n                if (_enableEvents(target)) {\r\n                    _isListening = true;\r\n                }\r\n            }\r\n        }\r\n        if (_isListening) {\r\n            // We are listening to events so lets set the current status rather than assuming we are online #1538\r\n            if (_navigator && !isNullOrUndefined(_navigator[_DYN_ON_LINE /* @min:%2eonLine */])) { // navigator.onLine is undefined in react-native\r\n                _onlineStatus = _navigator[_DYN_ON_LINE /* @min:%2eonLine */];\r\n            }\r\n        }\r\n    }\r\n    catch (e) {\r\n        // this makes react-native less angry\r\n        _isListening = false;\r\n    }\r\n    function _enableEvents(target) {\r\n        var enabled = false;\r\n        if (target) {\r\n            enabled = eventOn(target, \"online\", _setOnline, _evtNamespace);\r\n            if (enabled) {\r\n                eventOn(target, \"offline\", _setOffline, _evtNamespace);\r\n            }\r\n        }\r\n        return enabled;\r\n    }\r\n    function _setOnline() {\r\n        _onlineStatus = true;\r\n    }\r\n    function _setOffline() {\r\n        _onlineStatus = false;\r\n    }\r\n    function _isOnline() {\r\n        var result = true;\r\n        if (_isListening) {\r\n            result = _onlineStatus;\r\n        }\r\n        else if (_navigator && !isNullOrUndefined(_navigator[_DYN_ON_LINE /* @min:%2eonLine */])) { // navigator.onLine is undefined in react-native\r\n            result = _navigator[_DYN_ON_LINE /* @min:%2eonLine */];\r\n        }\r\n        return result;\r\n    }\r\n    function _unload() {\r\n        var win = getWindow();\r\n        if (win && _isListening) {\r\n            _disableEvents(win, _evtNamespace);\r\n            if (_document) {\r\n                // Also attach to the document.body or document\r\n                var target = _document.body || _document;\r\n                if (!isUndefined(target.ononline)) {\r\n                    _disableEvents(target, _evtNamespace);\r\n                }\r\n            }\r\n            _isListening = false;\r\n        }\r\n    }\r\n    return _a = {},\r\n        _a[_DYN_IS_ONLINE /* @min:isOnline */] = _isOnline,\r\n        _a.isListening = function () { return _isListening; },\r\n        _a.unload = _unload,\r\n        _a;\r\n}\r\n//# sourceMappingURL=Offline.js.map"],"mappings":";;;;AAAA,SAAAA,qBAAA,EAAAC,QAAA,EAAAC,OAAA,EAAAC,WAAA,EAAAC,YAAA,EAAAC,SAAA,EAAAC,iBAAA,EAAAC,WAAA,EAAAC,iBAAA;AACA,SAAAC,cAAA,EAAAC,YAAA;AACA,SAAAC,eAAAC,MAAA,EAAAC,YAAA;EACAZ,QAAA,CAAAW,MAAA,cAAAC,YAAA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAAC,sBAAAC,kBAAA;EACA,IAAAC,EAAA;EACA,IAAAC,SAAA,GAAAd,WAAA;EACA,IAAAe,UAAA,GAAAd,YAAA;EACA,IAAAe,YAAA;EACA,IAAAC,aAAA;EACA,IAAAC,aAAA,GAAAb,iBAAA,CAAAR,qBAAA,qBAAAe,kBAAA;EACA;IACA,IAAAO,aAAA,CAAAjB,SAAA;MACAc,YAAA;IACA;IACA,IAAAF,SAAA;MACA;MACA,IAAAL,MAAA,GAAAK,SAAA,CAAAM,IAAA,IAAAN,SAAA;MACA,IAAAL,MAAA,CAAAY,QAAA;QACA,IAAAF,aAAA,CAAAV,MAAA;UACAO,YAAA;QACA;MACA;IACA;IACA,IAAAA,YAAA;MACA;MACA,IAAAD,UAAA,KAAAZ,iBAAA,CAAAY,UAAA,CAAAR,YAAA;QAAA;QACAU,aAAA,GAAAF,UAAA,CAAAR,YAAA;MACA;IACA;EACA,EACA,OAAAe,CAAA;IACA;IACAN,YAAA;EACA;EACA,SAAAG,cAAAV,MAAA;IACA,IAAAc,OAAA;IACA,IAAAd,MAAA;MACAc,OAAA,GAAAxB,OAAA,CAAAU,MAAA,YAAAe,UAAA,EAAAN,aAAA;MACA,IAAAK,OAAA;QACAxB,OAAA,CAAAU,MAAA,aAAAgB,WAAA,EAAAP,aAAA;MACA;IACA;IACA,OAAAK,OAAA;EACA;EACA,SAAAC,WAAA;IACAP,aAAA;EACA;EACA,SAAAQ,YAAA;IACAR,aAAA;EACA;EACA,SAAAS,UAAA;IACA,IAAAC,MAAA;IACA,IAAAX,YAAA;MACAW,MAAA,GAAAV,aAAA;IACA,OACA,IAAAF,UAAA,KAAAZ,iBAAA,CAAAY,UAAA,CAAAR,YAAA;MAAA;MACAoB,MAAA,GAAAZ,UAAA,CAAAR,YAAA;IACA;;IACA,OAAAoB,MAAA;EACA;EACA,SAAAC,QAAA;IACA,IAAAC,GAAA,GAAA3B,SAAA;IACA,IAAA2B,GAAA,IAAAb,YAAA;MACAR,cAAA,CAAAqB,GAAA,EAAAX,aAAA;MACA,IAAAJ,SAAA;QACA;QACA,IAAAL,MAAA,GAAAK,SAAA,CAAAM,IAAA,IAAAN,SAAA;QACA,KAAAV,WAAA,CAAAK,MAAA,CAAAY,QAAA;UACAb,cAAA,CAAAC,MAAA,EAAAS,aAAA;QACA;MACA;MACAF,YAAA;IACA;EACA;EACA,OAAAH,EAAA,OACAA,EAAA,CAAAP,cAAA,wBAAAoB,SAAA,EACAb,EAAA,CAAAiB,WAAA;IAAA,OAAAd,YAAA;EAAA,GACAH,EAAA,CAAAkB,MAAA,GAAAH,OAAA,EACAf,EAAA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}