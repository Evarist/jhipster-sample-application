{"ast":null,"code":"/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n// \n// \nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\nimport { _DYN_APPLY, _DYN_DIAG_LOG, _DYN_LENGTH, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_SPLICE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\nimport { BaseTelemetryPlugin } from \"./BaseTelemetryPlugin\";\nimport { _throwInternal } from \"./DiagnosticLogger\";\nimport { dumpObj } from \"./EnvUtils\";\nimport { arrForEach, getExceptionName } from \"./HelperFuncs\";\nimport { STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\nvar TelemetryInitializerPlugin = /** @class */function (_super) {\n  __extends(TelemetryInitializerPlugin, _super);\n  function TelemetryInitializerPlugin() {\n    var _this = _super.call(this) || this;\n    _this.identifier = \"TelemetryInitializerPlugin\";\n    _this.priority = 199;\n    // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\n    var _id;\n    var _initializers;\n    _initDefaults();\n    dynamicProto(TelemetryInitializerPlugin, _this, function (_self, _base) {\n      _self.addTelemetryInitializer = function (telemetryInitializer) {\n        var theInitializer = {\n          id: _id++,\n          fn: telemetryInitializer\n        };\n        _initializers[_DYN_PUSH /* @min:%2epush */](theInitializer);\n        var handler = {\n          remove: function remove() {\n            arrForEach(_initializers, function (initializer, idx) {\n              if (initializer.id === theInitializer.id) {\n                _initializers[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\n                return -1;\n              }\n            });\n          }\n        };\n        return handler;\n      };\n      _self[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */] = function (item, itemCtx) {\n        var doNotSendItem = false;\n        var telemetryInitializersCount = _initializers[_DYN_LENGTH /* @min:%2elength */];\n        for (var i = 0; i < telemetryInitializersCount; ++i) {\n          var telemetryInitializer = _initializers[i];\n          if (telemetryInitializer) {\n            try {\n              if (telemetryInitializer.fn[_DYN_APPLY /* @min:%2eapply */](null, [item]) === false) {\n                doNotSendItem = true;\n                break;\n              }\n            } catch (e) {\n              // log error but dont stop executing rest of the telemetry initializers\n              // doNotSendItem = true;\n              _throwInternal(itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"One of telemetry initializers failed, telemetry item will not be sent: \" + getExceptionName(e), {\n                exception: dumpObj(e)\n              }, true);\n            }\n          }\n        }\n        if (!doNotSendItem) {\n          _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](item, itemCtx);\n        }\n      };\n      _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function () {\n        _initDefaults();\n      };\n    });\n    function _initDefaults() {\n      _id = 0;\n      _initializers = [];\n    }\n    return _this;\n  }\n  // Removed Stub for TelemetryInitializerPlugin.prototype.addTelemetryInitializer.\n  // Removed Stub for TelemetryInitializerPlugin.prototype.processTelemetry.\n  // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n  // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n  // this will be removed when ES3 support is dropped.\n  TelemetryInitializerPlugin.__ieDyn = 1;\n  return TelemetryInitializerPlugin;\n}(BaseTelemetryPlugin);\nexport { TelemetryInitializerPlugin };","map":{"version":3,"names":["__extendsFn","__extends","dynamicProto","_DYN_APPLY","_DYN_DIAG_LOG","_DYN_LENGTH","_DYN_PROCESS_NEXT","_DYN_PUSH","_DYN_SPLICE","_DYN__DO_TEARDOWN","BaseTelemetryPlugin","_throwInternal","dumpObj","arrForEach","getExceptionName","STR_PROCESS_TELEMETRY","TelemetryInitializerPlugin","_super","_this","call","identifier","priority","_id","_initializers","_initDefaults","_self","_base","addTelemetryInitializer","telemetryInitializer","theInitializer","id","fn","handler","remove","initializer","idx","item","itemCtx","doNotSendItem","telemetryInitializersCount","i","e","exception"],"sources":["/Users/evaristlobo/Documents/GitHub/jhipster-sample-application/client/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/TelemetryInitializerPlugin.js"],"sourcesContent":["// // Copyright (c) Microsoft Corporation. All rights reserved.\r\n// // Licensed under the MIT License.\r\nimport { __extends } from \"tslib\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { _DYN_APPLY, _DYN_DIAG_LOG, _DYN_LENGTH, _DYN_PROCESS_NEXT, _DYN_PUSH, _DYN_SPLICE, _DYN__DO_TEARDOWN } from \"../__DynamicConstants\";\r\nimport { BaseTelemetryPlugin } from \"./BaseTelemetryPlugin\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { dumpObj } from \"./EnvUtils\";\r\nimport { arrForEach, getExceptionName } from \"./HelperFuncs\";\r\nimport { STR_PROCESS_TELEMETRY } from \"./InternalConstants\";\r\nvar TelemetryInitializerPlugin = /** @class */ (function (_super) {\r\n    __extends(TelemetryInitializerPlugin, _super);\r\n    function TelemetryInitializerPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.identifier = \"TelemetryInitializerPlugin\";\r\n        _this.priority = 199;\r\n        // NOTE!: DON'T set default values here, instead set them in the _initDefaults() function as it is also called during teardown()\r\n        var _id;\r\n        var _initializers;\r\n        _initDefaults();\r\n        dynamicProto(TelemetryInitializerPlugin, _this, function (_self, _base) {\r\n            _self.addTelemetryInitializer = function (telemetryInitializer) {\r\n                var theInitializer = {\r\n                    id: _id++,\r\n                    fn: telemetryInitializer\r\n                };\r\n                _initializers[_DYN_PUSH /* @min:%2epush */](theInitializer);\r\n                var handler = {\r\n                    remove: function () {\r\n                        arrForEach(_initializers, function (initializer, idx) {\r\n                            if (initializer.id === theInitializer.id) {\r\n                                _initializers[_DYN_SPLICE /* @min:%2esplice */](idx, 1);\r\n                                return -1;\r\n                            }\r\n                        });\r\n                    }\r\n                };\r\n                return handler;\r\n            };\r\n            _self[STR_PROCESS_TELEMETRY /* @min:%2eprocessTelemetry */] = function (item, itemCtx) {\r\n                var doNotSendItem = false;\r\n                var telemetryInitializersCount = _initializers[_DYN_LENGTH /* @min:%2elength */];\r\n                for (var i = 0; i < telemetryInitializersCount; ++i) {\r\n                    var telemetryInitializer = _initializers[i];\r\n                    if (telemetryInitializer) {\r\n                        try {\r\n                            if (telemetryInitializer.fn[_DYN_APPLY /* @min:%2eapply */](null, [item]) === false) {\r\n                                doNotSendItem = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                        catch (e) {\r\n                            // log error but dont stop executing rest of the telemetry initializers\r\n                            // doNotSendItem = true;\r\n                            _throwInternal(itemCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 1 /* eLoggingSeverity.CRITICAL */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"One of telemetry initializers failed, telemetry item will not be sent: \" + getExceptionName(e), { exception: dumpObj(e) }, true);\r\n                        }\r\n                    }\r\n                }\r\n                if (!doNotSendItem) {\r\n                    _self[_DYN_PROCESS_NEXT /* @min:%2eprocessNext */](item, itemCtx);\r\n                }\r\n            };\r\n            _self[_DYN__DO_TEARDOWN /* @min:%2e_doTeardown */] = function () {\r\n                _initDefaults();\r\n            };\r\n        });\r\n        function _initDefaults() {\r\n            _id = 0;\r\n            _initializers = [];\r\n        }\r\n        return _this;\r\n    }\r\n    /**\r\n     * Add a telemetry processor to decorate or drop telemetry events.\r\n     * @param telemetryInitializer - The Telemetry Initializer function\r\n     * @returns - A ITelemetryInitializerHandler to enable the initializer to be removed\r\n     */\r\n    TelemetryInitializerPlugin.prototype.addTelemetryInitializer = function (telemetryInitializer) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return null;\r\n    };\r\n    TelemetryInitializerPlugin.prototype.processTelemetry = function (env, itemCtx) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    return TelemetryInitializerPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport { TelemetryInitializerPlugin };\r\n//# sourceMappingURL=TelemetryInitializerPlugin.js.map"],"mappings":";;;;AAAA;AACA;AACA,SAAAA,WAAA,IAAAC,SAAA;AACA,OAAAC,YAAA;AACA,SAAAC,UAAA,EAAAC,aAAA,EAAAC,WAAA,EAAAC,iBAAA,EAAAC,SAAA,EAAAC,WAAA,EAAAC,iBAAA;AACA,SAAAC,mBAAA;AACA,SAAAC,cAAA;AACA,SAAAC,OAAA;AACA,SAAAC,UAAA,EAAAC,gBAAA;AACA,SAAAC,qBAAA;AACA,IAAAC,0BAAA,0BAAAC,MAAA;EACAhB,SAAA,CAAAe,0BAAA,EAAAC,MAAA;EACA,SAAAD,2BAAA;IACA,IAAAE,KAAA,GAAAD,MAAA,CAAAE,IAAA;IACAD,KAAA,CAAAE,UAAA;IACAF,KAAA,CAAAG,QAAA;IACA;IACA,IAAAC,GAAA;IACA,IAAAC,aAAA;IACAC,aAAA;IACAtB,YAAA,CAAAc,0BAAA,EAAAE,KAAA,YAAAO,KAAA,EAAAC,KAAA;MACAD,KAAA,CAAAE,uBAAA,aAAAC,oBAAA;QACA,IAAAC,cAAA;UACAC,EAAA,EAAAR,GAAA;UACAS,EAAA,EAAAH;QACA;QACAL,aAAA,CAAAhB,SAAA,qBAAAsB,cAAA;QACA,IAAAG,OAAA;UACAC,MAAA,WAAAA,OAAA;YACApB,UAAA,CAAAU,aAAA,YAAAW,WAAA,EAAAC,GAAA;cACA,IAAAD,WAAA,CAAAJ,EAAA,KAAAD,cAAA,CAAAC,EAAA;gBACAP,aAAA,CAAAf,WAAA,uBAAA2B,GAAA;gBACA;cACA;YACA;UACA;QACA;QACA,OAAAH,OAAA;MACA;MACAP,KAAA,CAAAV,qBAAA,6CAAAqB,IAAA,EAAAC,OAAA;QACA,IAAAC,aAAA;QACA,IAAAC,0BAAA,GAAAhB,aAAA,CAAAlB,WAAA;QACA,SAAAmC,CAAA,MAAAA,CAAA,GAAAD,0BAAA,IAAAC,CAAA;UACA,IAAAZ,oBAAA,GAAAL,aAAA,CAAAiB,CAAA;UACA,IAAAZ,oBAAA;YACA;cACA,IAAAA,oBAAA,CAAAG,EAAA,CAAA5B,UAAA,6BAAAiC,IAAA;gBACAE,aAAA;gBACA;cACA;YACA,EACA,OAAAG,CAAA;cACA;cACA;cACA9B,cAAA,CAAA0B,OAAA,CAAAjC,aAAA,mMAAAU,gBAAA,CAAA2B,CAAA;gBAAAC,SAAA,EAAA9B,OAAA,CAAA6B,CAAA;cAAA;YACA;UACA;QACA;QACA,KAAAH,aAAA;UACAb,KAAA,CAAAnB,iBAAA,4BAAA8B,IAAA,EAAAC,OAAA;QACA;MACA;MACAZ,KAAA,CAAAhB,iBAAA;QACAe,aAAA;MACA;IACA;IACA,SAAAA,cAAA;MACAF,GAAA;MACAC,aAAA;IACA;IACA,OAAAL,KAAA;EACA;EACA;;;;;;;AAaA,EAAAR,mBAAA;AACA,SAAAM,0BAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}