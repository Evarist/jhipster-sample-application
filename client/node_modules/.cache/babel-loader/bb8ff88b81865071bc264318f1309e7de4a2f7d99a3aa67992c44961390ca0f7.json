{"ast":null,"code":"import * as React from 'react';\nimport { useConst } from './useConst';\n/**\n *  Returns a wrapper function for `setInterval` which automatically handles disposal.\n */\nexport var useSetInterval = function useSetInterval() {\n  var intervalIds = useConst({});\n  React.useEffect(function () {\n    return function () {\n      for (var _i = 0, _a = Object.keys(intervalIds); _i < _a.length; _i++) {\n        var id = _a[_i];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        clearInterval(id);\n      }\n    };\n  },\n  // useConst ensures this will never change, but react-hooks/exhaustive-deps doesn't know that\n  [intervalIds]);\n  return useConst({\n    setInterval: function (_setInterval) {\n      function setInterval(_x, _x2) {\n        return _setInterval.apply(this, arguments);\n      }\n      setInterval.toString = function () {\n        return _setInterval.toString();\n      };\n      return setInterval;\n    }(function (func, duration) {\n      var id = setInterval(func, duration);\n      intervalIds[id] = 1;\n      return id;\n    }),\n    clearInterval: function (_clearInterval) {\n      function clearInterval(_x3) {\n        return _clearInterval.apply(this, arguments);\n      }\n      clearInterval.toString = function () {\n        return _clearInterval.toString();\n      };\n      return clearInterval;\n    }(function (id) {\n      delete intervalIds[id];\n      clearInterval(id);\n    })\n  });\n};","map":{"version":3,"names":["React","useConst","useSetInterval","intervalIds","useEffect","_i","_a","Object","keys","length","id","clearInterval","setInterval","_setInterval","_x","_x2","apply","arguments","toString","func","duration","_clearInterval","_x3"],"sources":["/Users/evaristlobo/Documents/GitHub/jhipster-sample-application/client/node_modules/@fluentui/react-hooks/src/useSetInterval.ts"],"sourcesContent":["import * as React from 'react';\nimport { useConst } from './useConst';\n\nexport type UseSetIntervalReturnType = {\n  setInterval: (callback: () => void, duration: number) => number;\n  clearInterval: (id: number) => void;\n};\n\n/**\n *  Returns a wrapper function for `setInterval` which automatically handles disposal.\n */\nexport const useSetInterval = (): UseSetIntervalReturnType => {\n  const intervalIds = useConst<Record<number, number>>({});\n\n  React.useEffect(\n    () => () => {\n      for (const id of Object.keys(intervalIds)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        clearInterval(id as any);\n      }\n    },\n    // useConst ensures this will never change, but react-hooks/exhaustive-deps doesn't know that\n    [intervalIds],\n  );\n\n  return useConst({\n    setInterval: (func: () => void, duration: number): number => {\n      const id = setInterval(func, duration) as unknown as number;\n\n      intervalIds[id] = 1;\n\n      return id;\n    },\n\n    clearInterval: (id: number): void => {\n      delete intervalIds[id];\n      clearInterval(id);\n    },\n  });\n};\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,QAAQ,QAAQ,YAAY;AAOrC;;;AAGA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAG;EAC5B,IAAMC,WAAW,GAAGF,QAAQ,CAAyB,EAAE,CAAC;EAExDD,KAAK,CAACI,SAAS,CACb;IAAM;MACJ,KAAiB,IAAAC,EAAA,IAAwB,EAAxBC,EAAA,GAAAC,MAAM,CAACC,IAAI,CAACL,WAAW,CAAC,EAAxBE,EAAA,GAAAC,EAAA,CAAAG,MAAwB,EAAxBJ,EAAA,EAAwB,EAAE;QAAtC,IAAMK,EAAE,GAAAJ,EAAA,CAAAD,EAAA;QACX;QACAM,aAAa,CAACD,EAAS,CAAC;;IAE5B,CAAC;EALK,CAKL;EACD;EACA,CAACP,WAAW,CAAC,CACd;EAED,OAAOF,QAAQ,CAAC;IACdW,WAAW,YAAAC,YAAA;MAAA,SAAAD,YAAAE,EAAA,EAAAC,GAAA;QAAA,OAAAF,YAAA,CAAAG,KAAA,OAAAC,SAAA;MAAA;MAAAL,WAAA,CAAAM,QAAA;QAAA,OAAAL,YAAA,CAAAK,QAAA;MAAA;MAAA,OAAAN,WAAA;IAAA,EAAE,UAACO,IAAgB,EAAEC,QAAgB;MAC9C,IAAMV,EAAE,GAAGE,WAAW,CAACO,IAAI,EAAEC,QAAQ,CAAsB;MAE3DjB,WAAW,CAACO,EAAE,CAAC,GAAG,CAAC;MAEnB,OAAOA,EAAE;IACX,CAAC;IAEDC,aAAa,YAAAU,cAAA;MAAA,SAAAV,cAAAW,GAAA;QAAA,OAAAD,cAAA,CAAAL,KAAA,OAAAC,SAAA;MAAA;MAAAN,aAAA,CAAAO,QAAA;QAAA,OAAAG,cAAA,CAAAH,QAAA;MAAA;MAAA,OAAAP,aAAA;IAAA,EAAE,UAACD,EAAU;MACxB,OAAOP,WAAW,CAACO,EAAE,CAAC;MACtBC,aAAa,CAACD,EAAE,CAAC;IACnB,CAAC;GACF,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}