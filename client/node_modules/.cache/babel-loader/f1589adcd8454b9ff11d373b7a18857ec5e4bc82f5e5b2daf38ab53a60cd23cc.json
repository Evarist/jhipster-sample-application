{"ast":null,"code":"import _regeneratorRuntime from\"/Users/evaristlobo/Documents/GitHub/jhipster-sample-application/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/evaristlobo/Documents/GitHub/jhipster-sample-application/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{ListService}from\"../services/listService\";import config from\"../config\";import{trackEvent}from\"../services/telemetryService\";import{ActionTypes}from\"./common\";import{createPayloadAction}from\"./actionCreators\";var listService=new ListService(config.api.baseUrl,\"/lists\");export var list=function list(options){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var lists;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return listService.getList(options);case 2:lists=_context.sent;dispatch(listListsAction(lists));return _context.abrupt(\"return\",lists);case 5:case\"end\":return _context.stop();}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var select=function select(list){return function(dispatch){dispatch(selectListAction(list));return Promise.resolve(list);};};export var load=function load(id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch){var list;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return listService.get(id);case 2:list=_context2.sent;dispatch(loadListAction(list));return _context2.abrupt(\"return\",list);case 5:case\"end\":return _context2.stop();}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var save=function save(list){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch){var newList;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return listService.save(list);case 2:newList=_context3.sent;dispatch(saveListAction(newList));trackEvent(ActionTypes.SAVE_TODO_LIST.toString());return _context3.abrupt(\"return\",newList);case 6:case\"end\":return _context3.stop();}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var remove=function remove(id){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(dispatch){return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.next=2;return listService.delete(id);case 2:dispatch(deleteListAction(id));case 3:case\"end\":return _context4.stop();}},_callee4);}));return function(_x4){return _ref4.apply(this,arguments);};}();};var listListsAction=createPayloadAction(ActionTypes.LOAD_TODO_LISTS);var selectListAction=createPayloadAction(ActionTypes.SELECT_TODO_LIST);var loadListAction=createPayloadAction(ActionTypes.LOAD_TODO_LIST);var saveListAction=createPayloadAction(ActionTypes.SAVE_TODO_LIST);var deleteListAction=createPayloadAction(ActionTypes.DELETE_TODO_LIST);","map":{"version":3,"names":["ListService","config","trackEvent","ActionTypes","createPayloadAction","listService","api","baseUrl","list","options","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","dispatch","lists","wrap","_callee$","_context","prev","next","getList","sent","listListsAction","abrupt","stop","_x","apply","arguments","select","selectListAction","Promise","resolve","load","id","_ref2","_callee2","_callee2$","_context2","get","loadListAction","_x2","save","_ref3","_callee3","newList","_callee3$","_context3","saveListAction","SAVE_TODO_LIST","toString","_x3","remove","_ref4","_callee4","_callee4$","_context4","delete","deleteListAction","_x4","LOAD_TODO_LISTS","SELECT_TODO_LIST","LOAD_TODO_LIST","DELETE_TODO_LIST"],"sources":["/Users/evaristlobo/Documents/GitHub/jhipster-sample-application/client/src/actions/listActions.ts"],"sourcesContent":["import { QueryOptions } from \"@testing-library/react\";\nimport { Dispatch } from \"react\";\nimport { TodoList } from \"../models\";\nimport { ListService } from \"../services/listService\";\nimport config from \"../config\";\nimport { trackEvent } from \"../services/telemetryService\";\nimport { ActionTypes } from \"./common\";\nimport {\n  ActionMethod,\n  createPayloadAction,\n  PayloadAction,\n} from \"./actionCreators\";\n\nconst listService = new ListService(config.api.baseUrl, \"/lists\");\n\nexport interface ListActions {\n  list(options?: QueryOptions): Promise<TodoList[]>;\n  load(id: string): Promise<TodoList>;\n  select(list: TodoList): Promise<TodoList>;\n  save(list: TodoList): Promise<TodoList>;\n  remove(id: string): Promise<void>;\n}\n\nexport const list =\n  (options?: QueryOptions): ActionMethod<TodoList[]> =>\n  async (dispatch: Dispatch<ListListsAction>) => {\n    const lists = await listService.getList(options);\n\n    dispatch(listListsAction(lists));\n\n    return lists;\n  };\n\nexport const select =\n  (list: TodoList): ActionMethod<TodoList> =>\n  (dispatch: Dispatch<SelectListAction>) => {\n    dispatch(selectListAction(list));\n\n    return Promise.resolve(list);\n  };\n\nexport const load =\n  (id: string): ActionMethod<TodoList> =>\n  async (dispatch: Dispatch<LoadListAction>) => {\n    const list = await listService.get(id);\n\n    dispatch(loadListAction(list));\n\n    return list;\n  };\n\nexport const save =\n  (list: TodoList): ActionMethod<TodoList> =>\n  async (dispatch: Dispatch<SaveListAction>) => {\n    const newList = await listService.save(list);\n\n    dispatch(saveListAction(newList));\n\n    trackEvent(ActionTypes.SAVE_TODO_LIST.toString());\n\n    return newList;\n  };\n\nexport const remove =\n  (id: string): ActionMethod<void> =>\n  async (dispatch: Dispatch<DeleteListAction>) => {\n    await listService.delete(id);\n\n    dispatch(deleteListAction(id));\n  };\n\nexport interface ListListsAction extends PayloadAction<string, TodoList[]> {\n  type: ActionTypes.LOAD_TODO_LISTS;\n}\n\nexport interface SelectListAction\n  extends PayloadAction<string, TodoList | undefined> {\n  type: ActionTypes.SELECT_TODO_LIST;\n}\n\nexport interface LoadListAction extends PayloadAction<string, TodoList> {\n  type: ActionTypes.LOAD_TODO_LIST;\n}\n\nexport interface SaveListAction extends PayloadAction<string, TodoList> {\n  type: ActionTypes.SAVE_TODO_LIST;\n}\n\nexport interface DeleteListAction extends PayloadAction<string, string> {\n  type: ActionTypes.DELETE_TODO_LIST;\n}\n\nconst listListsAction = createPayloadAction<ListListsAction>(\n  ActionTypes.LOAD_TODO_LISTS,\n);\nconst selectListAction = createPayloadAction<SelectListAction>(\n  ActionTypes.SELECT_TODO_LIST,\n);\nconst loadListAction = createPayloadAction<LoadListAction>(\n  ActionTypes.LOAD_TODO_LIST,\n);\nconst saveListAction = createPayloadAction<SaveListAction>(\n  ActionTypes.SAVE_TODO_LIST,\n);\nconst deleteListAction = createPayloadAction<DeleteListAction>(\n  ActionTypes.DELETE_TODO_LIST,\n);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}