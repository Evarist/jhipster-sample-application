{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\nimport { ObjCreate, strShimFunction, strShimObject, strShimPrototype, strShimUndefined } from \"./Constants\";\nvar _cachedGlobal = null;\n/**\r\n * Returns the current global scope object, for a normal web page this will be the current\r\n * window, for a Web Worker this will be current worker global scope via \"self\". The internal\r\n * implementation returns the first available instance object in the following order\r\n * - globalThis (New standard)\r\n * - self (Will return the current window instance for supported browsers)\r\n * - window (fallback for older browser implementations)\r\n * - global (NodeJS standard)\r\n * - <null> (When all else fails)\r\n * While the return type is a Window for the normal case, not all environments will support all\r\n * of the properties or functions.\r\n */\nexport function getGlobal(useCached) {\n  if (useCached === void 0) {\n    useCached = true;\n  }\n  var result = useCached === false ? null : _cachedGlobal;\n  if (!result) {\n    if (typeof globalThis !== strShimUndefined) {\n      result = globalThis;\n    }\n    if (!result && typeof self !== strShimUndefined) {\n      result = self;\n    }\n    if (!result && typeof window !== strShimUndefined) {\n      result = window;\n    }\n    if (!result && typeof global !== strShimUndefined) {\n      result = global;\n    }\n    _cachedGlobal = result;\n  }\n  return result;\n}\nexport function throwTypeError(message) {\n  throw new TypeError(message);\n}\n/**\r\n * Creates an object that has the specified prototype, and that optionally contains specified properties. This helper exists to avoid adding a polyfil\r\n * for older browsers that do not define Object.create eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.\r\n * Note: For consistency this will not use the Object.create implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n * @param obj Object to use as a prototype. May be null\r\n */\nexport function objCreateFn(obj) {\n  var func = ObjCreate;\n  // Use build in Object.create\n  if (func) {\n    // Use Object create method if it exists\n    return func(obj);\n  }\n  if (obj == null) {\n    return {};\n  }\n  var type = typeof obj;\n  if (type !== strShimObject && type !== strShimFunction) {\n    throwTypeError(\"Object prototype may only be an Object:\" + obj);\n  }\n  function tmpFunc() {}\n  tmpFunc[strShimPrototype] = obj;\n  return new tmpFunc();\n}","map":{"version":3,"names":["ObjCreate","strShimFunction","strShimObject","strShimPrototype","strShimUndefined","_cachedGlobal","getGlobal","useCached","result","globalThis","self","window","global","throwTypeError","message","TypeError","objCreateFn","obj","func","type","tmpFunc"],"sources":["/Users/evaristlobo/Documents/GitHub/jhipster-sample-application/client/node_modules/@microsoft/applicationinsights-shims/src/Helpers.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\n\r\nimport {  ObjCreate, strShimFunction, strShimObject, strShimPrototype, strShimUndefined } from \"./Constants\";\r\n\r\ndeclare var globalThis: Window;\r\ndeclare var global: Window;\r\n\r\nlet _cachedGlobal: Window = null;\r\n\r\n/**\r\n * Returns the current global scope object, for a normal web page this will be the current\r\n * window, for a Web Worker this will be current worker global scope via \"self\". The internal\r\n * implementation returns the first available instance object in the following order\r\n * - globalThis (New standard)\r\n * - self (Will return the current window instance for supported browsers)\r\n * - window (fallback for older browser implementations)\r\n * - global (NodeJS standard)\r\n * - <null> (When all else fails)\r\n * While the return type is a Window for the normal case, not all environments will support all\r\n * of the properties or functions.\r\n */\r\nexport function getGlobal(useCached: boolean = true): Window {\r\n    let result = useCached === false ? null : _cachedGlobal;\r\n\r\n    if (!result) {\r\n        if (typeof globalThis !== strShimUndefined) {\r\n            result = globalThis;\r\n        }\r\n\r\n        if (!result && typeof self !== strShimUndefined) {\r\n            result = self;\r\n        }\r\n\r\n        if (!result && typeof window !== strShimUndefined) {\r\n            result = window;\r\n        }\r\n    \r\n        if (!result && typeof global !== strShimUndefined) {\r\n            result = global;\r\n        }\r\n\r\n        _cachedGlobal = result;\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nexport function throwTypeError(message: string): never {\r\n    throw new TypeError(message);\r\n}\r\n\r\n/**\r\n * Creates an object that has the specified prototype, and that optionally contains specified properties. This helper exists to avoid adding a polyfil\r\n * for older browsers that do not define Object.create eg. ES3 only, IE8 just in case any page checks for presence/absence of the prototype implementation.\r\n * Note: For consistency this will not use the Object.create implementation if it exists as this would cause a testing requirement to test with and without the implementations\r\n * @param obj Object to use as a prototype. May be null\r\n */\r\nexport function objCreateFn(obj: any): any {\r\n    var func = ObjCreate;\r\n    // Use build in Object.create\r\n    if (func) {\r\n        // Use Object create method if it exists\r\n        return func(obj);\r\n    }\r\n    if (obj == null) {\r\n        return {};\r\n    }\r\n    var type = typeof obj;\r\n    if (type !== strShimObject && type !== strShimFunction) {\r\n        throwTypeError(\"Object prototype may only be an Object:\" + obj);\r\n    }\r\n\r\n    function tmpFunc() {}\r\n    tmpFunc[strShimPrototype] = obj;\r\n\r\n    return new (tmpFunc as any)();\r\n}\r\n\r\n"],"mappings":"AAAA;AACA;AAEA,SAAUA,SAAS,EAAEC,eAAe,EAAEC,aAAa,EAAEC,gBAAgB,EAAEC,gBAAgB,QAAQ,aAAa;AAK5G,IAAIC,aAAa,GAAW,IAAI;AAEhC;;;;;;;;;;;;AAYA,OAAM,SAAUC,SAASA,CAACC,SAAyB;EAAzB,IAAAA,SAAA;IAAAA,SAAA,OAAyB;EAAA;EAC/C,IAAIC,MAAM,GAAGD,SAAS,KAAK,KAAK,GAAG,IAAI,GAAGF,aAAa;EAEvD,IAAI,CAACG,MAAM,EAAE;IACT,IAAI,OAAOC,UAAU,KAAKL,gBAAgB,EAAE;MACxCI,MAAM,GAAGC,UAAU;;IAGvB,IAAI,CAACD,MAAM,IAAI,OAAOE,IAAI,KAAKN,gBAAgB,EAAE;MAC7CI,MAAM,GAAGE,IAAI;;IAGjB,IAAI,CAACF,MAAM,IAAI,OAAOG,MAAM,KAAKP,gBAAgB,EAAE;MAC/CI,MAAM,GAAGG,MAAM;;IAGnB,IAAI,CAACH,MAAM,IAAI,OAAOI,MAAM,KAAKR,gBAAgB,EAAE;MAC/CI,MAAM,GAAGI,MAAM;;IAGnBP,aAAa,GAAGG,MAAM;;EAG1B,OAAOA,MAAM;AACjB;AAEA,OAAM,SAAUK,cAAcA,CAACC,OAAe;EAC1C,MAAM,IAAIC,SAAS,CAACD,OAAO,CAAC;AAChC;AAEA;;;;;;AAMA,OAAM,SAAUE,WAAWA,CAACC,GAAQ;EAChC,IAAIC,IAAI,GAAGlB,SAAS;EACpB;EACA,IAAIkB,IAAI,EAAE;IACN;IACA,OAAOA,IAAI,CAACD,GAAG,CAAC;;EAEpB,IAAIA,GAAG,IAAI,IAAI,EAAE;IACb,OAAO,EAAE;;EAEb,IAAIE,IAAI,GAAG,OAAOF,GAAG;EACrB,IAAIE,IAAI,KAAKjB,aAAa,IAAIiB,IAAI,KAAKlB,eAAe,EAAE;IACpDY,cAAc,CAAC,yCAAyC,GAAGI,GAAG,CAAC;;EAGnE,SAASG,OAAOA,CAAA,GAAI;EACpBA,OAAO,CAACjB,gBAAgB,CAAC,GAAGc,GAAG;EAE/B,OAAO,IAAKG,OAAe,EAAE;AACjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}