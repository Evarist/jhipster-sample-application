{"ast":null,"code":"/*\n * Application Insights JavaScript SDK - React Plugin, 3.4.2\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n/**\r\n* ReactPlugin.ts\r\n* @copyright Microsoft 2019\r\n*/\nimport { __extendsFn as __extends } from \"@microsoft/applicationinsights-shims\";\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\nimport { BaseTelemetryPlugin, _throwInternal, arrForEach, isFunction, objDefineAccessors, proxyFunctions, safeGetCookieMgr } from \"@microsoft/applicationinsights-core-js\";\nvar ReactPlugin = /** @class */function (_super) {\n  __extends(ReactPlugin, _super);\n  function ReactPlugin() {\n    var _this = _super.call(this) || this;\n    _this.priority = 185;\n    _this.identifier = 'ReactPlugin';\n    var _analyticsPlugin;\n    var _extensionConfig;\n    var _unlisten;\n    var _pageViewTimer;\n    dynamicProto(ReactPlugin, _this, function (_self, _base) {\n      _initDefaults();\n      _self.initialize = function (config, core, extensions, pluginChain) {\n        _super.prototype.initialize.call(_this, config, core, extensions, pluginChain);\n        _extensionConfig = config.extensionConfig && config.extensionConfig[_self.identifier] ? config.extensionConfig[_self.identifier] : {\n          history: null\n        };\n        arrForEach(extensions, function (ext) {\n          var identifier = ext.identifier;\n          if (identifier === 'ApplicationInsightsAnalytics') {\n            _analyticsPlugin = ext;\n          }\n        });\n        if (_extensionConfig.history) {\n          _addHistoryListener(_extensionConfig.history);\n          var pageViewTelemetry = {\n            uri: _extensionConfig.history.location.pathname\n          };\n          _self.trackPageView(pageViewTelemetry);\n        }\n      };\n      _self.getCookieMgr = function () {\n        return safeGetCookieMgr(_self.core);\n      };\n      _self.getAppInsights = _getAnalytics;\n      _self.processTelemetry = function (event, itemCtx) {\n        _self.processNext(event, itemCtx);\n      };\n      _self._doTeardown = function (unloadCtx, unloadState, asyncCallback) {\n        if (isFunction(_unlisten)) {\n          _unlisten();\n        }\n        if (_pageViewTimer) {\n          clearTimeout(_pageViewTimer);\n        }\n        _initDefaults();\n      };\n      // Proxy the analytics functions\n      proxyFunctions(_self, _getAnalytics, [\"trackMetric\", \"trackPageView\", \"trackEvent\", \"trackException\", \"trackTrace\"]);\n      function _initDefaults() {\n        _analyticsPlugin = null;\n        _extensionConfig = null;\n        _unlisten = null;\n        _pageViewTimer = null;\n      }\n      function _getAnalytics() {\n        if (!_analyticsPlugin) {\n          _throwInternal(_self.diagLog(), 1 /* eLoggingSeverity.CRITICAL */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"Analytics plugin is not available, React plugin telemetry will not be sent: \");\n        }\n        return _analyticsPlugin;\n      }\n      function _addHistoryListener(history) {\n        var locationListener = function locationListener(arg) {\n          // v4 of the history API passes \"location\" as the first argument, while v5 passes an object that contains location and action \n          var locn = null;\n          if (\"location\" in arg) {\n            // Looks like v5\n            locn = arg[\"location\"];\n          } else {\n            locn = arg;\n          }\n          // Timeout to ensure any changes to the DOM made by route changes get included in pageView telemetry\n          _pageViewTimer = setTimeout(function () {\n            _pageViewTimer = null;\n            var pageViewTelemetry = {\n              uri: locn.pathname\n            };\n            _self.trackPageView(pageViewTelemetry);\n          }, 500);\n        };\n        _unlisten = history.listen(locationListener);\n      }\n      objDefineAccessors(_self, \"_extensionConfig\", function () {\n        return _extensionConfig;\n      });\n    });\n    return _this;\n  }\n  // Removed Stub for ReactPlugin.prototype.initialize.\n  // Removed Stub for ReactPlugin.prototype.getCookieMgr.\n  // Removed Stub for ReactPlugin.prototype.getAppInsights.\n  // Removed Stub for ReactPlugin.prototype.processTelemetry.\n  // Removed Stub for ReactPlugin.prototype.trackMetric.\n  // Removed Stub for ReactPlugin.prototype.trackPageView.\n  // Removed Stub for ReactPlugin.prototype.trackEvent.\n  // Removed Stub for ReactPlugin.prototype.trackException.\n  // Removed Stub for ReactPlugin.prototype.trackTrace.\n  // This is a workaround for an IE8 bug when using dynamicProto() with classes that don't have any\n  // non-dynamic functions or static properties/functions when using uglify-js to minify the resulting code.\n  // this will be removed when ES3 support is dropped.\n  ReactPlugin.__ieDyn = 1;\n  return ReactPlugin;\n}(BaseTelemetryPlugin);\nexport default ReactPlugin;","map":{"version":3,"names":["__extendsFn","__extends","dynamicProto","BaseTelemetryPlugin","_throwInternal","arrForEach","isFunction","objDefineAccessors","proxyFunctions","safeGetCookieMgr","ReactPlugin","_super","_this","call","priority","identifier","_analyticsPlugin","_extensionConfig","_unlisten","_pageViewTimer","_self","_base","_initDefaults","initialize","config","core","extensions","pluginChain","prototype","extensionConfig","history","ext","_addHistoryListener","pageViewTelemetry","uri","location","pathname","trackPageView","getCookieMgr","getAppInsights","_getAnalytics","processTelemetry","event","itemCtx","processNext","_doTeardown","unloadCtx","unloadState","asyncCallback","clearTimeout","diagLog","locationListener","arg","locn","setTimeout","listen"],"sources":["/Users/evaristlobo/Documents/GitHub/jhipster-sample-application/client/node_modules/@microsoft/applicationinsights-react-js/dist-esm/ReactPlugin.js"],"sourcesContent":["/**\r\n* ReactPlugin.ts\r\n* @copyright Microsoft 2019\r\n*/\r\nimport { __extends } from \"tslib\";\r\nimport dynamicProto from \"@microsoft/dynamicproto-js\";\r\nimport { BaseTelemetryPlugin, _throwInternal, arrForEach, isFunction, objDefineAccessors, proxyFunctions, safeGetCookieMgr } from \"@microsoft/applicationinsights-core-js\";\r\nvar ReactPlugin = /** @class */ (function (_super) {\r\n    __extends(ReactPlugin, _super);\r\n    function ReactPlugin() {\r\n        var _this = _super.call(this) || this;\r\n        _this.priority = 185;\r\n        _this.identifier = 'ReactPlugin';\r\n        var _analyticsPlugin;\r\n        var _extensionConfig;\r\n        var _unlisten;\r\n        var _pageViewTimer;\r\n        dynamicProto(ReactPlugin, _this, function (_self, _base) {\r\n            _initDefaults();\r\n            _self.initialize = function (config, core, extensions, pluginChain) {\r\n                _super.prototype.initialize.call(_this, config, core, extensions, pluginChain);\r\n                _extensionConfig =\r\n                    config.extensionConfig && config.extensionConfig[_self.identifier]\r\n                        ? config.extensionConfig[_self.identifier]\r\n                        : { history: null };\r\n                arrForEach(extensions, function (ext) {\r\n                    var identifier = ext.identifier;\r\n                    if (identifier === 'ApplicationInsightsAnalytics') {\r\n                        _analyticsPlugin = ext;\r\n                    }\r\n                });\r\n                if (_extensionConfig.history) {\r\n                    _addHistoryListener(_extensionConfig.history);\r\n                    var pageViewTelemetry = {\r\n                        uri: _extensionConfig.history.location.pathname\r\n                    };\r\n                    _self.trackPageView(pageViewTelemetry);\r\n                }\r\n            };\r\n            _self.getCookieMgr = function () {\r\n                return safeGetCookieMgr(_self.core);\r\n            };\r\n            _self.getAppInsights = _getAnalytics;\r\n            _self.processTelemetry = function (event, itemCtx) {\r\n                _self.processNext(event, itemCtx);\r\n            };\r\n            _self._doTeardown = function (unloadCtx, unloadState, asyncCallback) {\r\n                if (isFunction(_unlisten)) {\r\n                    _unlisten();\r\n                }\r\n                if (_pageViewTimer) {\r\n                    clearTimeout(_pageViewTimer);\r\n                }\r\n                _initDefaults();\r\n            };\r\n            // Proxy the analytics functions\r\n            proxyFunctions(_self, _getAnalytics, [\r\n                \"trackMetric\",\r\n                \"trackPageView\",\r\n                \"trackEvent\",\r\n                \"trackException\",\r\n                \"trackTrace\",\r\n            ]);\r\n            function _initDefaults() {\r\n                _analyticsPlugin = null;\r\n                _extensionConfig = null;\r\n                _unlisten = null;\r\n                _pageViewTimer = null;\r\n            }\r\n            function _getAnalytics() {\r\n                if (!_analyticsPlugin) {\r\n                    _throwInternal(_self.diagLog(), 1 /* eLoggingSeverity.CRITICAL */, 64 /* _eInternalMessageId.TelemetryInitializerFailed */, \"Analytics plugin is not available, React plugin telemetry will not be sent: \");\r\n                }\r\n                return _analyticsPlugin;\r\n            }\r\n            function _addHistoryListener(history) {\r\n                var locationListener = function (arg) {\r\n                    // v4 of the history API passes \"location\" as the first argument, while v5 passes an object that contains location and action \r\n                    var locn = null;\r\n                    if (\"location\" in arg) {\r\n                        // Looks like v5\r\n                        locn = arg[\"location\"];\r\n                    }\r\n                    else {\r\n                        locn = arg;\r\n                    }\r\n                    // Timeout to ensure any changes to the DOM made by route changes get included in pageView telemetry\r\n                    _pageViewTimer = setTimeout(function () {\r\n                        _pageViewTimer = null;\r\n                        var pageViewTelemetry = { uri: locn.pathname };\r\n                        _self.trackPageView(pageViewTelemetry);\r\n                    }, 500);\r\n                };\r\n                _unlisten = history.listen(locationListener);\r\n            }\r\n            objDefineAccessors(_self, \"_extensionConfig\", function () { return _extensionConfig; });\r\n        });\r\n        return _this;\r\n    }\r\n    ReactPlugin.prototype.initialize = function (config, core, extensions, pluginChain) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    /**\r\n     * Get the current cookie manager for this instance\r\n     */\r\n    ReactPlugin.prototype.getCookieMgr = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return null;\r\n    };\r\n    /**\r\n     * Get application insights instance.\r\n     */\r\n    ReactPlugin.prototype.getAppInsights = function () {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n        return null;\r\n    };\r\n    /**\r\n     * Add Part A fields to the event\r\n     * @param event The event that needs to be processed\r\n     */\r\n    ReactPlugin.prototype.processTelemetry = function (event, itemCtx) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    ReactPlugin.prototype.trackMetric = function (metric, customProperties) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    ReactPlugin.prototype.trackPageView = function (pageView) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    ReactPlugin.prototype.trackEvent = function (event, customProperties) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    ReactPlugin.prototype.trackException = function (exception, customProperties) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    ReactPlugin.prototype.trackTrace = function (trace, customProperties) {\r\n        // @DynamicProtoStub -- DO NOT add any code as this will be removed during packaging\r\n    };\r\n    return ReactPlugin;\r\n}(BaseTelemetryPlugin));\r\nexport default ReactPlugin;\r\n//# sourceMappingURL=ReactPlugin.js.map"],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA,SAAAA,WAAA,IAAAC,SAAA;AACA,OAAAC,YAAA;AACA,SAAAC,mBAAA,EAAAC,cAAA,EAAAC,UAAA,EAAAC,UAAA,EAAAC,kBAAA,EAAAC,cAAA,EAAAC,gBAAA;AACA,IAAAC,WAAA,0BAAAC,MAAA;EACAV,SAAA,CAAAS,WAAA,EAAAC,MAAA;EACA,SAAAD,YAAA;IACA,IAAAE,KAAA,GAAAD,MAAA,CAAAE,IAAA;IACAD,KAAA,CAAAE,QAAA;IACAF,KAAA,CAAAG,UAAA;IACA,IAAAC,gBAAA;IACA,IAAAC,gBAAA;IACA,IAAAC,SAAA;IACA,IAAAC,cAAA;IACAjB,YAAA,CAAAQ,WAAA,EAAAE,KAAA,YAAAQ,KAAA,EAAAC,KAAA;MACAC,aAAA;MACAF,KAAA,CAAAG,UAAA,aAAAC,MAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,WAAA;QACAhB,MAAA,CAAAiB,SAAA,CAAAL,UAAA,CAAAV,IAAA,CAAAD,KAAA,EAAAY,MAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,WAAA;QACAV,gBAAA,GACAO,MAAA,CAAAK,eAAA,IAAAL,MAAA,CAAAK,eAAA,CAAAT,KAAA,CAAAL,UAAA,IACAS,MAAA,CAAAK,eAAA,CAAAT,KAAA,CAAAL,UAAA,IACA;UAAAe,OAAA;QAAA;QACAzB,UAAA,CAAAqB,UAAA,YAAAK,GAAA;UACA,IAAAhB,UAAA,GAAAgB,GAAA,CAAAhB,UAAA;UACA,IAAAA,UAAA;YACAC,gBAAA,GAAAe,GAAA;UACA;QACA;QACA,IAAAd,gBAAA,CAAAa,OAAA;UACAE,mBAAA,CAAAf,gBAAA,CAAAa,OAAA;UACA,IAAAG,iBAAA;YACAC,GAAA,EAAAjB,gBAAA,CAAAa,OAAA,CAAAK,QAAA,CAAAC;UACA;UACAhB,KAAA,CAAAiB,aAAA,CAAAJ,iBAAA;QACA;MACA;MACAb,KAAA,CAAAkB,YAAA;QACA,OAAA7B,gBAAA,CAAAW,KAAA,CAAAK,IAAA;MACA;MACAL,KAAA,CAAAmB,cAAA,GAAAC,aAAA;MACApB,KAAA,CAAAqB,gBAAA,aAAAC,KAAA,EAAAC,OAAA;QACAvB,KAAA,CAAAwB,WAAA,CAAAF,KAAA,EAAAC,OAAA;MACA;MACAvB,KAAA,CAAAyB,WAAA,aAAAC,SAAA,EAAAC,WAAA,EAAAC,aAAA;QACA,IAAA1C,UAAA,CAAAY,SAAA;UACAA,SAAA;QACA;QACA,IAAAC,cAAA;UACA8B,YAAA,CAAA9B,cAAA;QACA;QACAG,aAAA;MACA;MACA;MACAd,cAAA,CAAAY,KAAA,EAAAoB,aAAA,GACA,eACA,iBACA,cACA,kBACA,aACA;MACA,SAAAlB,cAAA;QACAN,gBAAA;QACAC,gBAAA;QACAC,SAAA;QACAC,cAAA;MACA;MACA,SAAAqB,cAAA;QACA,KAAAxB,gBAAA;UACAZ,cAAA,CAAAgB,KAAA,CAAA8B,OAAA;QACA;QACA,OAAAlC,gBAAA;MACA;MACA,SAAAgB,oBAAAF,OAAA;QACA,IAAAqB,gBAAA,YAAAA,iBAAAC,GAAA;UACA;UACA,IAAAC,IAAA;UACA,kBAAAD,GAAA;YACA;YACAC,IAAA,GAAAD,GAAA;UACA,OACA;YACAC,IAAA,GAAAD,GAAA;UACA;UACA;UACAjC,cAAA,GAAAmC,UAAA;YACAnC,cAAA;YACA,IAAAc,iBAAA;cAAAC,GAAA,EAAAmB,IAAA,CAAAjB;YAAA;YACAhB,KAAA,CAAAiB,aAAA,CAAAJ,iBAAA;UACA;QACA;QACAf,SAAA,GAAAY,OAAA,CAAAyB,MAAA,CAAAJ,gBAAA;MACA;MACA5C,kBAAA,CAAAa,KAAA;QAAA,OAAAH,gBAAA;MAAA;IACA;IACA,OAAAL,KAAA;EACA;EACA;;;;;;;;;;;;;;AAwCA,EAAAT,mBAAA;AACA,eAAAO,WAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}