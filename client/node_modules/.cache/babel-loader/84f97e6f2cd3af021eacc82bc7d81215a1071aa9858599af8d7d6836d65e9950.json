{"ast":null,"code":"/*\n * Application Insights JavaScript SDK - Core, 2.8.12\n * Copyright (c) Microsoft and contributors. All rights reserved.\n */\n\nimport { _DYN_DIAG_LOG, _DYN_PUSH } from \"../__DynamicConstants\";\nimport { _throwInternal } from \"./DiagnosticLogger\";\nimport { dumpObj } from \"./EnvUtils\";\nimport { arrForEach } from \"./HelperFuncs\";\nexport function createUnloadHandlerContainer() {\n  var handlers = [];\n  function _addHandler(handler) {\n    if (handler) {\n      handlers[_DYN_PUSH /* @min:%2epush */](handler);\n    }\n  }\n  function _runHandlers(unloadCtx, unloadState) {\n    arrForEach(handlers, function (handler) {\n      try {\n        handler(unloadCtx, unloadState);\n      } catch (e) {\n        _throwInternal(unloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected error calling unload handler - \" + dumpObj(e));\n      }\n    });\n    handlers = [];\n  }\n  return {\n    add: _addHandler,\n    run: _runHandlers\n  };\n}","map":{"version":3,"names":["_DYN_DIAG_LOG","_DYN_PUSH","_throwInternal","dumpObj","arrForEach","createUnloadHandlerContainer","handlers","_addHandler","handler","_runHandlers","unloadCtx","unloadState","e","add","run"],"sources":["/Users/evaristlobo/Documents/GitHub/jhipster-sample-application/client/node_modules/@microsoft/applicationinsights-core-js/dist-esm/JavaScriptSDK/UnloadHandlerContainer.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\r\n// Licensed under the MIT License.\r\nimport { _DYN_DIAG_LOG, _DYN_PUSH } from \"../__DynamicConstants\";\r\nimport { _throwInternal } from \"./DiagnosticLogger\";\r\nimport { dumpObj } from \"./EnvUtils\";\r\nimport { arrForEach } from \"./HelperFuncs\";\r\nexport function createUnloadHandlerContainer() {\r\n    var handlers = [];\r\n    function _addHandler(handler) {\r\n        if (handler) {\r\n            handlers[_DYN_PUSH /* @min:%2epush */](handler);\r\n        }\r\n    }\r\n    function _runHandlers(unloadCtx, unloadState) {\r\n        arrForEach(handlers, function (handler) {\r\n            try {\r\n                handler(unloadCtx, unloadState);\r\n            }\r\n            catch (e) {\r\n                _throwInternal(unloadCtx[_DYN_DIAG_LOG /* @min:%2ediagLog */](), 2 /* eLoggingSeverity.WARNING */, 73 /* _eInternalMessageId.PluginException */, \"Unexpected error calling unload handler - \" + dumpObj(e));\r\n            }\r\n        });\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add: _addHandler,\r\n        run: _runHandlers\r\n    };\r\n}\r\n//# sourceMappingURL=UnloadHandlerContainer.js.map"],"mappings":";;;;;AAEA,SAAAA,aAAA,EAAAC,SAAA;AACA,SAAAC,cAAA;AACA,SAAAC,OAAA;AACA,SAAAC,UAAA;AACA,gBAAAC,6BAAA;EACA,IAAAC,QAAA;EACA,SAAAC,YAAAC,OAAA;IACA,IAAAA,OAAA;MACAF,QAAA,CAAAL,SAAA,qBAAAO,OAAA;IACA;EACA;EACA,SAAAC,aAAAC,SAAA,EAAAC,WAAA;IACAP,UAAA,CAAAE,QAAA,YAAAE,OAAA;MACA;QACAA,OAAA,CAAAE,SAAA,EAAAC,WAAA;MACA,EACA,OAAAC,CAAA;QACAV,cAAA,CAAAQ,SAAA,CAAAV,aAAA,0JAAAG,OAAA,CAAAS,CAAA;MACA;IACA;IACAN,QAAA;EACA;EACA;IACAO,GAAA,EAAAN,WAAA;IACAO,GAAA,EAAAL;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}